name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Set up cache
      uses: actions/cache@v2
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      working-directory: ./backend/app/
      run: |
        poetry install --no-interaction
      if: |
        steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    - name: Lint with flake8
      run: |
        flake8 --extend-exclude=/.venv/ --max-line-length=120 app/
    - name: Build docker and launch docker app
      run: |
        docker compose -f "docker-compose.yml" up --build -d
    - name: Sleep for 10 seconds
      run: sleep 10s
      shell: bash
    - name: Test with pytest
      run: |
        docker compose exec app sh scripts/test.sh -vv
        coverage report